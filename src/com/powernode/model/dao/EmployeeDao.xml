<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powernode.model.dao.EmployeeDao">
    <resultMap id="BaseResultMap" type="com.powernode.entity.Employee">
        <id column="employee_id" jdbcType="INTEGER" property="employeeId"/>
        <result column="dept_id" jdbcType="INTEGER" property="deptId"/>
        <result column="employee_no" jdbcType="VARCHAR" property="employeeNo"/>
        <result column="employee_pwd" jdbcType="VARCHAR" property="employeePwd"/>
        <result column="employee_name" jdbcType="VARCHAR" property="employeeName"/>
        <result column="employee_sex" jdbcType="VARCHAR" property="employeeSex"/>
        <result column="employee_age" jdbcType="INTEGER" property="employeeAge"/>
        <result column="employee_phone" jdbcType="VARCHAR" property="employeePhone"/>
        <result column="employee_card_no" jdbcType="VARCHAR" property="employeeCardNo"/>
        <result column="employee_mail" jdbcType="VARCHAR" property="employeeMail"/>
        <result column="employee_birthday" jdbcType="DATE" property="employeeBirthday"/>
        <result column="employee_job" jdbcType="VARCHAR" property="employeeJob"/>
        <result column="employee_adress" jdbcType="VARCHAR" property="employeeAdress"/>
        <result column="employee_expire_time" jdbcType="TIMESTAMP" property="employeeExpireTime"/>
        <result column="employee_status" jdbcType="INTEGER" property="employeeStatus"/>
        <result column="employee_allowed_ips" jdbcType="VARCHAR" property="employeeAllowedIps"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <!--<result column="dept_name" jdbcType="VARCHAR" property="dept.deptName"/>-->
        <result column="create_name" jdbcType="VARCHAR" property="creator.employeeName"/>
        <result column="create_no" jdbcType="VARCHAR" property="creator.employeeNo"/>
        <result column="update_name" jdbcType="VARCHAR" property="updator.employeeName"/>
        <result column="update_no" jdbcType="VARCHAR" property="updator.employeeNo"/>
    </resultMap>
    <sql id="Base_Column_List">
    employee_id, dept_id, employee_no, employee_pwd, employee_name, employee_sex, employee_age, 
    employee_phone, employee_card_no, employee_mail, employee_birthday, employee_job, 
    employee_adress, employee_expire_time, employee_status, employee_allowed_ips, create_by, 
    create_time, update_by, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_employee
        where employee_id = #{employeeId,jdbcType=INTEGER}
    </select>
    <select id="selectOne" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_employee
        where employee_no = #{employeeNo}
        and employee_pwd = #{employeePwd}
        and (employee_expire_time &gt;= now() or employee_expire_time is null)
        and employee_status = 1
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select
        e.employee_id, e.dept_id, e.employee_no, e.employee_pwd,
        e.employee_name, e.employee_sex, e.employee_age, e.employee_phone,
        e.employee_card_no, e.employee_mail, e.employee_birthday, e.employee_job,
        e.employee_adress, e.employee_expire_time, e.employee_status, e.employee_allowed_ips,
        e.create_by, e.create_time, e.update_by, e.update_time,
        -- d.dept_name,
        ec.employee_name create_name,ec.employee_no create_no,
        eu.employee_name update_name,eu.employee_no update_no
        from t_employee e
        -- left join t_dept d on e.dept_id = d.dept_id
        left join t_employee ec on e.create_by = ec.employee_id
        left join t_employee eu on e.update_by = eu.employee_id
        <where>
            <if test="employee.employeeName != null and employee.employeeName != ''">
                and e.employee_name like concat('%',#{employee.employeeName},'%')
            </if>
            <if test="employee.deptId != null">
                and e.dept_id = #{employee.deptId}
            </if>
            <if test="employee.employeeStatus != null and employee.employeeStatus != ''">
                and e.employee_status = #{employee.employeeStatus}
            </if>
            <if test="employee.startTime != null and employee.startTime != ''">
                and e.employee_expire_time &gt;= str_to_date(#{employee.startTime},"%Y-%m-%d %H:%i")
            </if>
            <if test="employee.endTime != null and employee.endTime != ''">
                and e.employee_expire_time &lt;= str_to_date(#{employee.endTime},"%Y-%m-%d %H:%i")
            </if>
        </where>
        order by employee_id desc
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_employee
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="employee_id" keyProperty="employeeId" parameterType="com.powernode.entity.Employee"
            useGeneratedKeys="true">
    insert into t_employee (dept_id, employee_no, employee_pwd, 
      employee_name, employee_sex, employee_age, 
      employee_phone, employee_card_no, employee_mail, 
      employee_birthday, employee_job, employee_adress, 
      employee_expire_time, employee_status, employee_allowed_ips, 
      create_by, create_time, update_by, 
      update_time)
    values (#{deptId,jdbcType=INTEGER}, #{employeeNo,jdbcType=VARCHAR}, #{employeePwd,jdbcType=VARCHAR}, 
      #{employeeName,jdbcType=VARCHAR}, #{employeeSex,jdbcType=VARCHAR}, #{employeeAge,jdbcType=INTEGER}, 
      #{employeePhone,jdbcType=VARCHAR}, #{employeeCardNo,jdbcType=VARCHAR}, #{employeeMail,jdbcType=VARCHAR}, 
      #{employeeBirthday,jdbcType=DATE}, #{employeeJob,jdbcType=VARCHAR}, #{employeeAdress,jdbcType=VARCHAR}, 
      #{employeeExpireTime,jdbcType=TIMESTAMP}, #{employeeStatus,jdbcType=INTEGER}, #{employeeAllowedIps,jdbcType=VARCHAR},
      #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" keyColumn="employee_id" keyProperty="employeeId"
            parameterType="com.powernode.entity.Employee" useGeneratedKeys="true">
        insert into t_employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="employeeNo != null">
                employee_no,
            </if>
            <if test="employeePwd != null">
                employee_pwd,
            </if>
            <if test="employeeName != null">
                employee_name,
            </if>
            <if test="employeeSex != null">
                employee_sex,
            </if>
            <if test="employeeAge != null">
                employee_age,
            </if>
            <if test="employeePhone != null">
                employee_phone,
            </if>
            <if test="employeeCardNo != null">
                employee_card_no,
            </if>
            <if test="employeeMail != null">
                employee_mail,
            </if>
            <if test="employeeBirthday != null">
                employee_birthday,
            </if>
            <if test="employeeJob != null">
                employee_job,
            </if>
            <if test="employeeAdress != null">
                employee_adress,
            </if>
            <if test="employeeExpireTime != null">
                employee_expire_time,
            </if>
            <if test="employeeStatus != null">
                employee_status,
            </if>
            <if test="employeeAllowedIps != null">
                employee_allowed_ips,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="deptId != null">
                #{deptId,jdbcType=INTEGER},
            </if>
            <if test="employeeNo != null">
                #{employeeNo,jdbcType=VARCHAR},
            </if>
            <if test="employeePwd != null">
                #{employeePwd,jdbcType=VARCHAR},
            </if>
            <if test="employeeName != null">
                #{employeeName,jdbcType=VARCHAR},
            </if>
            <if test="employeeSex != null">
                #{employeeSex,jdbcType=VARCHAR},
            </if>
            <if test="employeeAge != null">
                #{employeeAge,jdbcType=INTEGER},
            </if>
            <if test="employeePhone != null">
                #{employeePhone,jdbcType=VARCHAR},
            </if>
            <if test="employeeCardNo != null">
                #{employeeCardNo,jdbcType=VARCHAR},
            </if>
            <if test="employeeMail != null">
                #{employeeMail,jdbcType=VARCHAR},
            </if>
            <if test="employeeBirthday != null">
                #{employeeBirthday,jdbcType=DATE},
            </if>
            <if test="employeeJob != null">
                #{employeeJob,jdbcType=VARCHAR},
            </if>
            <if test="employeeAdress != null">
                #{employeeAdress,jdbcType=VARCHAR},
            </if>
            <if test="employeeExpireTime != null">
                #{employeeExpireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="employeeStatus != null">
                #{employeeStatus,jdbcType=INTEGER},
            </if>
            <if test="employeeAllowedIps != null">
                #{employeeAllowedIps,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.powernode.entity.Employee">
        update t_employee
        <set>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=INTEGER},
            </if>
            <if test="employeePwd != null">
                employee_pwd = #{employeePwd,jdbcType=VARCHAR},
            </if>
            <if test="employeeName != null">
                employee_name = #{employeeName,jdbcType=VARCHAR},
            </if>
            <if test="employeeSex != null">
                employee_sex = #{employeeSex,jdbcType=VARCHAR},
            </if>
            <if test="employeeAge != null">
                employee_age = #{employeeAge,jdbcType=INTEGER},
            </if>
            <if test="employeePhone != null">
                employee_phone = #{employeePhone,jdbcType=VARCHAR},
            </if>
            <if test="employeeCardNo != null">
                employee_card_no = #{employeeCardNo,jdbcType=VARCHAR},
            </if>
            <if test="employeeMail != null">
                employee_mail = #{employeeMail,jdbcType=VARCHAR},
            </if>
            <if test="employeeBirthday != null">
                employee_birthday = #{employeeBirthday,jdbcType=DATE},
            </if>
            <if test="employeeJob != null">
                employee_job = #{employeeJob,jdbcType=VARCHAR},
            </if>
            <if test="employeeAdress != null">
                employee_adress = #{employeeAdress,jdbcType=VARCHAR},
            </if>
            <if test="employeeExpireTime != null">
                employee_expire_time = #{employeeExpireTime,jdbcType=TIMESTAMP},
            </if>
            <if test="employeeStatus != null">
                employee_status = #{employeeStatus,jdbcType=INTEGER},
            </if>
            <if test="employeeAllowedIps != null">
                employee_allowed_ips = #{employeeAllowedIps,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where employee_id = #{employeeId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.powernode.entity.Employee">
    update t_employee
    set dept_id = #{deptId,jdbcType=INTEGER},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      employee_sex = #{employeeSex,jdbcType=VARCHAR},
      employee_age = #{employeeAge,jdbcType=INTEGER},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_card_no = #{employeeCardNo,jdbcType=VARCHAR},
      employee_mail = #{employeeMail,jdbcType=VARCHAR},
      employee_birthday = #{employeeBirthday,jdbcType=DATE},
      employee_job = #{employeeJob,jdbcType=VARCHAR},
      employee_adress = #{employeeAdress,jdbcType=VARCHAR},
      employee_expire_time = #{employeeExpireTime,jdbcType=TIMESTAMP},
      employee_status = #{employeeStatus,jdbcType=INTEGER},
      employee_allowed_ips = #{employeeAllowedIps,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
</mapper>